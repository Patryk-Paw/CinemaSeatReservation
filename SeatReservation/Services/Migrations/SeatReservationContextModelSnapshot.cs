// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SeatReservation.Services;

#nullable disable

namespace SeatReservation.Services.Migrations
{
    [DbContext(typeof(SeatReservationContext))]
    partial class SeatReservationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("SeatReservation.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BookingTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SeatId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("BookingId");

                    b.HasIndex("MovieId");

                    b.HasIndex("SeatId")
                        .IsUnique();

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("SeatReservation.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MovieTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ShowTime")
                        .HasColumnType("TEXT");

                    b.HasKey("MovieId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("SeatReservation.Models.Seat", b =>
                {
                    b.Property<int>("SeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsReserved")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SeatRow")
                        .HasColumnType("INTEGER");

                    b.HasKey("SeatId");

                    b.HasIndex("MovieId");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("SeatReservation.Models.Booking", b =>
                {
                    b.HasOne("SeatReservation.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeatReservation.Models.Seat", "Seat")
                        .WithOne("Booking")
                        .HasForeignKey("SeatReservation.Models.Booking", "SeatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("SeatReservation.Models.Seat", b =>
                {
                    b.HasOne("SeatReservation.Models.Movie", "Movie")
                        .WithMany("Seats")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("SeatReservation.Models.Movie", b =>
                {
                    b.Navigation("Seats");
                });

            modelBuilder.Entity("SeatReservation.Models.Seat", b =>
                {
                    b.Navigation("Booking");
                });
#pragma warning restore 612, 618
        }
    }
}
